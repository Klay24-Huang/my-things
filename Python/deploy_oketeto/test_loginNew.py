# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestLogin():
  def setup_method(self, method):
    chrome_options = Options()
    chrome_options.add_argument("--ignore-certificate-errors")
    self.driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=chrome_options)
    self.vars = {}

  
  # def teardown_method(self, method):
  #   self.driver.quit()
  
  def wait_for_window(self, timeout = 2):
    time.sleep(round(timeout / 1000))
    wh_now = self.driver.window_handles
    wh_then = self.vars["window_handles"]
    if len(wh_now) > len(wh_then):
      return set(wh_now).difference(set(wh_then)).pop()
  
  def test_loginNew(self):
    self.driver.get("https://www.okteto.com/")
    self.driver.set_window_size(1552, 832)
    self.driver.find_element(By.LINK_TEXT, "Login").click()
    self.vars["window_handles"] = self.driver.window_handles
    self.vars["root"] = self.driver.current_window_handle
    self.driver.find_element(By.CSS_SELECTOR, ".Button").click()
    self.vars["win4398"] = self.wait_for_window(5000)
    self.driver.switch_to.window(self.vars["win4398"])
    self.driver.find_element(By.ID, "login_field").click()
    self.driver.find_element(By.ID, "login_field").send_keys("wkus963@gmail.com")
    self.driver.find_element(By.ID, "password").click()
    self.driver.find_element(By.ID, "password").send_keys("800824arkGithub")
    self.driver.find_element(By.NAME, "commit").click()
    self.driver.switch_to.window(self.vars["root"])
    # self.foo = 1
    time.sleep(5)
    self.driver.find_element(By.CSS_SELECTOR, ".selected .ResourceItem__Title").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ResourceDetailsButtons > .ToolbarButton:nth-child(1)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".Button:nth-child(1) > .button-content").click()
    time.sleep(10)

  # def test_deployNew(self):
  #   print(self.foo)
  #   # self.driver.switch_to.window(self.vars["root"])
  #   # self.driver.get("https://www.okteto.com/")
  #   # self.driver.set_window_size(1536, 816)
  #   # self.driver.find_element(By.LINK_TEXT, "Login").click()
  #   self.driver.get("https://cloud.okteto.com/spaces/klay24-huang")
  #   time.sleep(10)
  #   self.driver.find_element(By.CSS_SELECTOR, ".selected .ResourceItem__Title").click()
  #   self.driver.find_element(By.CSS_SELECTOR, ".ResourceDetailsButtons > .ToolbarButton:nth-child(1)").click()
  #   self.driver.find_element(By.CSS_SELECTOR, ".Button:nth-child(1) > .button-content").click()

  
